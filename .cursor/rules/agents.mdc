---
description: 
globs: 
alwaysApply: false
---
# Agent Template Rules (`/agents`)

This file provides guidelines for defining and managing Agent Templates, which configure individual AI agents.

## Location & Structure
- Agent templates are defined in the root `/agents` directory for public visibility and contribution.
- Each agent resides in its own subdirectory within `[agents/](mdc:/agents)` (e.g., `[agents/cognitive-reasoner/](mdc:agents/cognitive-reasoner)`).
- Each agent subdirectory **must** contain a `template.json` file.
- Optionally, include a `README.md` explaining the agent's purpose and usage, and an `assets/` folder for icons/avatars.

```
agents/
└── [agent-name]/
    ├── template.json     # Core configuration (required)
    ├── README.md         # Documentation (recommended)
    └── assets/           # Optional assets (e.g., avatar.png)
```

## Template Configuration (`template.json`)
- The `template.json` file defines the agent's identity, capabilities, LLM settings, and behavior.
- Refer to the detailed documentation for the structure and available fields: `[docs/agent-templates.md](mdc:docs/agent-templates.md)`.
- Key fields include:
  - `agentId` (unique identifier)
  - `name`, `description` (for UI)
  - `personality` (defines system prompt)
  - `nodes` (list of required LLM and tool nodes)
  - `nodeConfigurations` (LLM parameters, tool settings)
  - `chatSettings` (UI behavior)

## Creating New Agents
1. Create a new subdirectory in `[agents/](mdc:agents)` with a descriptive name (kebab-case).
2. Create the `template.json` file within the new directory, following the structure outlined in `[docs/agent-templates.md](mdc:docs/agent-templates.md)`.
3. Optionally add a `README.md` and assets.
4. The build process should automatically pick up the new template.

## Community Contributions
- Refer to `[docs/rfa/add-agent.md](mdc:docs/rfa/add-agent.md)` for guidelines on contributing new agents.
