# AgentDock Environment Configuration Example
# Copy this file to .env.local for local development

# ==============================================================================
# Storage Provider Selection
# ==============================================================================
# Select the Key-Value storage provider.
# - 'memory': Default in-memory storage (no persistence).
# - 'redis': Redis-compatible storage via Upstash client.
# - 'vercel-kv': Vercel KV storage (Redis under the hood).
# - 'sqlite': SQLite database (auto-enabled in development).
# - 'postgresql': PostgreSQL database (auto-enabled when DATABASE_URL is set).
KV_STORE_PROVIDER=memory

# ==============================================================================
# Configuration for KV_STORE_PROVIDER=redis (Local Docker Compose)
# ==============================================================================
# These are used ONLY when KV_STORE_PROVIDER is set to 'redis'.
# They point to the local redis-http-proxy container defined in docker-compose.yaml.
REDIS_URL=http://localhost:8079
# REDIS_TOKEN=  # Only needed if your local Redis requires auth (default Docker setup doesn't)
SRH_TOKEN=test_token # Required authentication token for the local redis-http-proxy.

# ==============================================================================
# Configuration for KV_STORE_PROVIDER=vercel-kv (Vercel Deployment / Local Test)
# ==============================================================================
# These variables are used ONLY when KV_STORE_PROVIDER is set to 'vercel-kv'.
# When deploying to Vercel and using a Marketplace integration (like Upstash),
# Vercel automatically injects these variables into the environment. 
# You typically DO NOT need to set them manually in Vercel project settings.
# For local testing with `vercel dev`, these are pulled automatically after `vercel link`.
# For local testing WITHOUT `vercel dev`, copy these values from your Vercel project's
# Upstash integration settings into your .env.local file.
#
# KV_URL=                 # Automatically injected by Vercel / Set manually for local test
# KV_REST_API_URL=        # Automatically injected by Vercel / Set manually for local test
# KV_REST_API_TOKEN=       # Automatically injected by Vercel / Set manually for local test
#
# Note: Vercel also provides KV_REST_API_READ_ONLY_TOKEN and a direct REDIS_URL,
# but these are not typically used by the default @vercel/kv setup.

# ==============================================================================
# SESSION TTL (Optional - Vercel KV / Redis)
# ==============================================================================
# Define how long inactive sessions should persist in seconds (e.g., 86400 for 24 hours).
SESSION_TTL_SECONDS=86400

# ==============================================================================
# LLM PROVIDER API KEYS
# ==============================================================================
# At least one of these API keys is required
# These will be used as fallbacks if no custom key is set in settings
# Used in priority order: 1) Agent-specific custom key, 2) Global settings key, 3) Environment variable

ANTHROPIC_API_KEY=              # Anthropic API key (starts with sk-ant-)
OPENAI_API_KEY=                 # OpenAI API key (starts with sk-)
GEMINI_API_KEY=                 # Google Gemini API key
DEEPSEEK_API_KEY=               # DeepSeek API key
GROQ_API_KEY=                   # Groq API key
CEREBRAS_API_KEY=               # Cerebras API key

# ==============================================================================
# MESSAGE HISTORY SETTINGS
# ==============================================================================
# Controls conversation memory retention
# These settings have HIGHEST PRECEDENCE and will override URL parameters
# and agent template settings for security

NEXT_PUBLIC_DEFAULT_HISTORY_POLICY=lastN # Options: none, lastN, all
NEXT_PUBLIC_DEFAULT_HISTORY_LENGTH=20    # Number of user messages to retain

# ==============================================================================
# SCIENTIFIC API KEYS & CONFIGURATION
# ==============================================================================
# Required only for higher rate limits with scientific APIs

PUBMED_API_KEY=                 # Optional: Higher rate limits for PubMed E-utilities
OPENALEX_EMAIL=                 # Optional: Email for higher OpenAlex API rate limits
SEMANTIC_SCHOLAR_API_KEY=       # Optional: API key for higher Semantic Scholar rate limits

# ==============================================================================
# OTHER TOOL-SPECIFIC API KEYS
# ==============================================================================
# Required only for specific tools

SERPER_API_KEY=                 # Required for search functionality
FIRECRAWL_API_KEY=              # Required for deeper web search
ALPHAVANTAGE_API_KEY=           # Used for financial data tools
COINGECKO_API_KEY=              # Used for cryptocurrency tools

# ==============================================================================
# DEPLOYMENT CONFIGURATION
# ==============================================================================

NODE_ENV=development            # Set to 'production' for deployment

# Environment identifier: 'vercel' when deployed on Vercel, 'local' or unset otherwise.
# This helps agentdock-core detect if Vercel-specific features like `waitUntil` might be available.
AGENTDOCK_EXECUTION_ENV=local

# Environment identifier: 'hub' for production/hosted, 'oss' for local/self-hosted default
DEPLOYMENT_ENV=oss
NEXT_PUBLIC_DEPLOYMENT_ENV=oss  # Should match DEPLOYMENT_ENV

# Client-side environment indicator (matches NODE_ENV by default)
NEXT_PUBLIC_ENV=development

# Database Configuration (only relevant for potential Pro deployment)
# DATABASE_URL=postgresql://user:password@localhost:5432/agentdock

# Rate Limiting (Control via Production Env Vars on Vercel)
ENABLE_RATE_LIMIT=no            # Set to 'yes' in Vercel Production Env Vars to enable
# RATE_LIMIT_REQUESTS=20        # Set in Vercel Production Env Vars
# RATE_LIMIT_WINDOW_SECONDS=600 # Set in Vercel Production Env Vars

################################################################################
# Services & External APIs
################################################################################

# Example Custom API
CUSTOM_API_KEY=...

################################################################################
# App Configuration
################################################################################

# Server authentication mode (oauth, none)
NEXTAUTH_SECRET=...
NEXTAUTH_URL=...
NEXTAUTH_AUTH_MODE=none

# ==============================================================================
# ANALYTICS CONFIGURATION (PostHog)
# ==============================================================================
# Optional: Configure PostHog analytics for usage tracking.
# See docs/analytics.md for more details.

# Your PostHog Project API Key (found in project settings).
# Required to enable any analytics tracking.
NEXT_PUBLIC_POSTHOG_API_KEY=

# The API host for your PostHog instance.
# Defaults to PostHog Cloud US (https://us.i.posthog.com) if unset.
# Use your own instance URL if self-hosting (e.g., https://posthog.example.com).
NEXT_PUBLIC_POSTHOG_HOST=

# Explicitly enable/disable analytics.
# Set to 'true' to enable. 
# If unset, defaults to 'true' ONLY when NODE_ENV is 'production', otherwise 'false'.
NEXT_PUBLIC_ANALYTICS_ENABLED=

# ==============================================================================
# ADVANCED STORAGE CONFIGURATION
# ==============================================================================
# AgentDock supports 15 storage adapters. The abstraction layer is complete,
# but features like server-side chat persistence and AI memory are NOT yet built.
#
# Core Adapters (Always Available):
# - memory, redis, vercel-kv
#
# Auto-Registered by App:
# - sqlite, sqlite-vec, postgresql, postgresql-vector

# ------------------------------------------------------------------------------
# AUTO-REGISTERED STORAGE ADAPTERS
# ------------------------------------------------------------------------------

# SQLite Configuration
# Auto-enabled in development. For production, set explicitly:
ENABLE_SQLITE=false             # Set to 'true' to force enable SQLite
ENABLE_SQLITE_VEC=false         # Set to 'true' to enable vector search capabilities
# SQLITE_PATH=./agentdock.db    # Optional: Custom database path (default: ./agentdock.db)

# PostgreSQL Configuration
# Auto-enabled when DATABASE_URL is set (see line 103 above):
# DATABASE_URL=postgresql://user:password@localhost:5432/agentdock
ENABLE_PGVECTOR=false           # Set to 'true' for vector search support

# ------------------------------------------------------------------------------
# OPTIONAL STORAGE ADAPTERS (Manual Registration Required)
# ------------------------------------------------------------------------------
# These adapters must be manually registered in your API routes.
# They are NOT auto-registered to keep build size small.

# MongoDB Configuration
ENABLE_MONGODB=false            # Set to 'true' if using MongoDB
MONGODB_URI=                    # mongodb://localhost:27017/agentdock

# AWS S3 Configuration
ENABLE_S3=false                 # Set to 'true' if using S3
S3_BUCKET=                      # Your S3 bucket name
AWS_REGION=us-east-1            # AWS region
AWS_ACCESS_KEY_ID=              # AWS credentials (or use IAM roles)
AWS_SECRET_ACCESS_KEY=
# AWS_SESSION_TOKEN=            # Optional: For temporary credentials

# AWS DynamoDB Configuration
ENABLE_DYNAMODB=false           # Set to 'true' if using DynamoDB
DYNAMODB_TABLE_NAME=            # Your DynamoDB table name

# Cloudflare Storage Configuration
ENABLE_CLOUDFLARE=false         # Set to 'true' if using Cloudflare
# Note: CF_KV_NAMESPACE and CF_D1_DATABASE must be bound in wrangler.toml

# Vector Database Configuration
ENABLE_VECTOR_DBS=false         # Set to 'true' if using vector databases

# Pinecone Configuration
PINECONE_API_KEY=               # Your Pinecone API key
PINECONE_INDEX=                 # Default index name

# Qdrant Configuration
QDRANT_HOST=localhost           # Qdrant host
QDRANT_PORT=6333                # Qdrant port
QDRANT_API_KEY=                 # Optional: API key for Qdrant Cloud

# ChromaDB Configuration
CHROMADB_HOST=http://localhost:8000  # ChromaDB server URL
CHROMADB_AUTH_TOKEN=            # Optional: Authentication token